C51 COMPILER V9.01   DEVICE_KEY                                                            07/26/2015 23:45:15 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE DEVICE_KEY
OBJECT MODULE PLACED IN .\device_key.obj
COMPILER INVOKED BY: D:\软件安装目录\keil4安装目录\C51\BIN\C51.EXE ..\SourceFile\device_key.c BROWSE DEBUG OBJECTEXTEND 
                    -PRINT(.\device_key.lst) OBJECT(.\device_key.obj)

line level    source

   1          /*
   2          ********************************************************************************
   3          *                                嵌入式微系统
   4          *                               msOS-mcu51-v0.1
   5          *
   6          *                               实用单片机系统
   7          *                               McuSystem(MS3.3)
   8          *                               
   9          *                              主芯片:STC89C52
  10          *                           深圳市雨滴科技有限公司
  11          *
  12          *                                作者:王绍伟
  13          *                                网名:凤舞天
  14          *                                标识:wangsw
  15          *
  16          *                                QQ:26033613
  17          *                               QQ群:291235815
  18          *                        淘宝店:http://52edk.taobao.com
  19          *                      论坛:http://gongkong.eefocus.com/bbs/
  20          *                博客:http://forum.eet-cn.com/BLOG_wangsw317_1268.HTM
  21          ********************************************************************************
  22          *文件名   : device_key.c
  23          *作用     : 按键设备
  24          *创建时间 : 2013.8.17
  25          ********************************************************************************
  26          */
  27          
  28          
  29          #include "system.h"
  30          
  31          
  32          #define ShortInterval                   3               //短按按键节拍，不得低于3
  33          #define LongInterval                    40              //长按按键节拍
  34          #define DoubleHitInterval           10          //防止连续双击误动节拍
  35          
  36          static byte idata ScanValueSave = invalid;    //第一次按键存储值
  37          static byte idata ScanCounter = 0;            //按键按下节拍计数器
  38          static byte idata DoubleHitCounter = 0;       //防止连续双击误动节拍计数器
  39          
  40          
  41          
  42          /*******************************************************************************
  43          * 函数名        : RemapKey
  44          * 描述      : 短按键映射
  45          * 输入参数  : scanValue:扫描值
  46          * 返回参数  : 短按按键映射值
  47          ********************************************************************************
  48          *版本     作者            日期            说明
  49          *V0.1    Wangsw        2013/09/27       初始版本
  50          *******************************************************************************/
  51          static byte RemapKey(byte scanValue) 
  52          {
  53   1          switch(scanValue)
  54   1          {
C51 COMPILER V9.01   DEVICE_KEY                                                            07/26/2015 23:45:15 PAGE 2   

  55   2              case 0x77:
  56   2                  return(12);
  57   2              case 0x7B:
  58   2                  return(8);
  59   2              case 0x7D:
  60   2                  return(4);
  61   2              case 0x7E:
  62   2                  return(0);
  63   2              case 0xB7:
  64   2                  return(13);
  65   2              case 0xBB:
  66   2                  return(9);
  67   2              case 0xBD:
  68   2                  return(5);
  69   2              case 0xBE:
  70   2                  return(1);
  71   2              case 0xD7:
  72   2                  return(14);
  73   2              case 0xDB:
  74   2                  return(10);
  75   2              case 0xDD:
  76   2                  return(6);
  77   2              case 0xDE:
  78   2                  return(2);
  79   2              case 0xE7:
  80   2                  return(15);
  81   2              case 0xEB:
  82   2                  return(11);
  83   2              case 0xED:
  84   2                  return(7);
  85   2              case 0xEE:
  86   2                  return(3);
  87   2              default:
  88   2                  return(invalid);
  89   2          }
  90   1      }
  91          
  92          
  93          
  94          /*******************************************************************************
  95          * 函数名        : RemapLongKey
  96          * 描述      : 长按按键映射
  97          * 输入参数  : scanValue 扫描值
  98          * 返回参数  : 长按按键映射值
  99          ********************************************************************************
 100          *版本     作者            日期            说明
 101          *V0.1    Wangsw        2013/09/27       初始版本
 102          *******************************************************************************/
 103          static byte RemapLongKey(byte scanValue) 
 104          {
 105   1          switch(scanValue)
 106   1          {
 107   2              case 0x77:
 108   2                  return(0x30);
 109   2              case 0x7B:
 110   2                  return(0x31);
 111   2              case 0x7D:
 112   2                  return(0x32);
 113   2              case 0x7E:
 114   2                  return(0x33);
 115   2              case 0xB7:
 116   2                  return(0x34);
C51 COMPILER V9.01   DEVICE_KEY                                                            07/26/2015 23:45:15 PAGE 3   

 117   2              case 0xBB:
 118   2                  return(0x35);
 119   2              case 0xBD:
 120   2                  return(0x36);
 121   2              case 0xBE:
 122   2                  return(0x37);
 123   2              case 0xD7:
 124   2                  return(0x38);
 125   2              case 0xDB:
 126   2                  return(0x39);
 127   2              case 0xDD:
 128   2                  return(0x3A);
 129   2              case 0xDE:
 130   2                  return(0x3B);
 131   2              case 0xE7:
 132   2                  return(0x3C);
 133   2              case 0xEB:
 134   2                  return(0x3D);
 135   2              case 0xED:
 136   2                  return(0x3E);
 137   2              case 0xEE:
 138   2                  return(0x3F);
 139   2              default:
 140   2                  return(invalid);
 141   2          }   
 142   1      }
 143          
 144          /*****************************************************************************
 145          * 函数名        : ScanPin
 146          * 描述      : P1口4*4矩阵按键扫描
 147          * 输入参数  : 无
 148          * 返回参数  : byte类型按键扫描值
 149          *****************************************************************************/
 150          static byte ScanPin(void)
 151          {
 152   1          byte scanValue;
 153   1              
 154   1          P1 = 0x0F;                      //P17~P14置低
 155   1          Delay(1);                       //延时，等待电平稳定
 156   1          scanValue = P1;                 //读取低4位按键值
 157   1              
 158   1          P1 = 0xF0;                      //P17~P14置低
 159   1          Delay(1);                       //延时，等待电平稳定
 160   1          scanValue = scanValue | P1 ;    //读取高四位按键值并与低四位合并
 161   1              
 162   1          return(scanValue);              //返回值
 163   1      }
 164          
 165          /*******************************************************************************
 166          * 函数名        : KeySystemTickService
 167          * 描述      : 按键扫描服务程序，间隔10mS一次扫描获取按键信息
 168          * 输入参数  : 无
 169          * 返回参数  : 抛出长短两种按键值消息
 170          ********************************************************************************
 171          *版本     作者            日期            说明
 172          *V0.1    Wangsw        2013/09/27       初始版本
 173          *******************************************************************************/
 174          void KeySystemTickService(void) 
 175          {
 176   1          byte scanValue;
 177   1      
 178   1          scanValue = ScanPin();                     //读取矩阵按键值
C51 COMPILER V9.01   DEVICE_KEY                                                            07/26/2015 23:45:15 PAGE 4   

 179   1      
 180   1          if (scanValue == invalid)                  //判断是否释放按键
 181   1          {
 182   2              if (DoubleHitCounter)                  //防止双击计数器
 183   2              {
 184   3                  DoubleHitCounter--;
 185   3                  ScanCounter = 0;
 186   3                  ScanValueSave = invalid;
 187   3                  return;
 188   3              }
 189   2              
 190   2              if (ScanValueSave == invalid)           //判断按键值是否有效
 191   2              {
 192   3                  ScanCounter = 0;
 193   3                  return;
 194   3              }
 195   2                  
 196   2              if (ScanCounter == LongInterval)        //判断为长按键，发送长按键消息 
 197   2              {
 198   3                  PostMessage(KeyMessageType, RemapLongKey(ScanValueSave)); 
 199   3              } 
 200   2              else if (ScanCounter > ShortInterval)   //判断为短按键，发送短按键消息 
 201   2              {
 202   3                  PostMessage(KeyMessageType, RemapKey(ScanValueSave));
 203   3              }
 204   2              ScanCounter = 0;                        
 205   2              ScanValueSave = invalid;
 206   2              DoubleHitCounter = DoubleHitInterval;   //设定防止双击计数值
 207   2          } 
 208   1          else                                        //检测到按键值
 209   1          {
 210   2              ScanCounter++;
 211   2              
 212   2              if (ScanCounter == 1)                   //存储第一次按键值
 213   2              {
 214   3                  ScanValueSave = scanValue;
 215   3              } 
 216   2              else if (ScanCounter == 2)              //判断按键值是否有效
 217   2              {
 218   3                  if (scanValue != ScanValueSave)
 219   3                  {
 220   4                      ScanValueSave = invalid;
 221   4                      ScanCounter = 0;
 222   4                  }
 223   3              }
 224   2              else if (ScanCounter >= LongInterval)   //防止计数值溢出循环
 225   2              {
 226   3                  ScanCounter = LongInterval;
 227   3              }
 228   2          }
 229   1      }
 230          
 231          
 232          
 233          
 234          
 235          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    366    ----
   CONSTANT SIZE    =   ----    ----
C51 COMPILER V9.01   DEVICE_KEY                                                            07/26/2015 23:45:15 PAGE 5   

   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       2
   IDATA SIZE       =      3    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
